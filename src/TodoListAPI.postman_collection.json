{
	"info": {
		"_postman_id": "3212d18f-5c8e-4d7b-ab78-4ffc079e512a",
		"name": "TodoListAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27540983"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "create-account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar registrar usu√°rio com sucesso\", function(){",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json; ",
									"    pm.response.to.have.jsonBody(\"name\"); ",
									"    pm.response.to.have.jsonBody(\"token\");",
									"",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")",
									"",
									"let password = pm.variables.replaceIn(\"{{$randomPassword}}\")",
									"let confirmPassword = password; ",
									"",
									"postman.setGlobalVariable(\"PASSWORD\", password);",
									"postman.setGlobalVariable(\"CONFIRMPASSWORD\", confirmPassword); ",
									"postman.setGlobalVariable(\"EMAIL\", email);  "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomFirstName}}\",\n  \"email\": \"{{EMAIL}}\",\n  \"password\": \"{{PASSWORD}}\",\n  \"confirmPassword\": \"{{CONFIRMPASSWORD}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URLBASE}}/api/v1/users/create-account",
							"host": [
								"{{URLBASE}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"create-account"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar fazer login com sucesso\", function(){",
									"    pm.response.to.have.status(200); ",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.have.jsonBody(\"name\"); ",
									"    pm.response.to.have.jsonBody(\"token\");",
									"",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"TOKEN\", jsonData.token);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{EMAIL}}\",\n  \"password\": \"{{PASSWORD}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URLBASE}}/api/v1/authentication/login",
							"host": [
								"{{URLBASE}}"
							],
							"path": [
								"api",
								"v1",
								"authentication",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar recuperar pefil com sucesso\", function(){",
									"    pm.response.to.have.status(200); ",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.have.jsonBody(\"id\");",
									"    pm.response.to.have.jsonBody(\"name\");",
									"    pm.response.to.have.jsonBody(\"email\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URLBASE}}/api/v1/users/get-profile",
							"host": [
								"{{URLBASE}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"get-profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let newPassword = pm.variables.replaceIn(\"{{$randomPassword}}\")",
									"",
									"postman.setGlobalVariable(\"NEWPASSWORD\", newPassword);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar atualizar senha com sucesso\", function(){",
									"    pm.response.to.have.status(204);",
									"    ",
									"    var newPassword = postman.getGlobalVariable(\"NEWPASSWORD\");",
									"    pm.environment.set(\"PASSWORD\", newPassword);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currentPassword\": \"{{PASSWORD}}\",\n  \"newPassword\": \"{{NEWPASSWORD}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URLBASE}}/api/v1/users/update-password",
							"host": [
								"{{URLBASE}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"update-password"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Task",
			"item": [
				{
					"name": "register-task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar registrar tarefa com sucesso\", function(){",
									"    pm.response.to.have.status(201); ",
									"    pm.response.to.be.withBody; ",
									"    pm.response.to.be.json; ",
									"    pm.response.to.have.jsonBody(\"id\");",
									"    pm.response.to.have.jsonBody(\"title\"); ",
									"    pm.response.to.have.jsonBody(\"description\"); ",
									"    pm.response.to.have.jsonBody(\"finishDate\"); ",
									"",
									"    let jsonData = pm.response.json();",
									"    pm.environment.set(\"IDTASK\", jsonData.id);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{$randomJobTitle}}\",\n  \"description\": \"{{$randomJobDescriptor}}\",\n  \"type\": 0,\n  \"finishDate\": \"2023-12-20T01:05:11.618Z\",\n  \"subTasks\": [\n    {\n      \"title\": \"{{$randomJobTitle}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URLBASE}}/api/v1/tasks/register-task",
							"host": [
								"{{URLBASE}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								"register-task"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar recuperar todas as tarefas com sucesso\", function(){",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.withBody; ",
									"    pm.response.to.be.json;  ",
									"",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    pm.expect(jsonData[0]).to.have.keys(\"id\", \"title\", \"description\", \"finishDate\", \"status\");",
									"",
									"",
									"    ",
									"",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"\",\n    \"type\":0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URLBASE}}/api/v1/tasks/get-all",
							"host": [
								"{{URLBASE}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								"get-all"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-by-id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar recuperar tarefa por id com sucesso\", function(){",
									"    pm.response.to.have.status(200); ",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json; ",
									"",
									"    pm.response.to.have.jsonBody(\"id\"); ",
									"    pm.response.to.have.jsonBody(\"status\");",
									"    pm.response.to.have.jsonBody(\"title\");",
									"    pm.response.to.have.jsonBody(\"description\");",
									"    pm.response.to.have.jsonBody(\"finishDate\");",
									"    pm.response.to.have.jsonBody(\"subTasks\");",
									"",
									"    let jsonData = pm.response.json(); ",
									"    pm.expect(jsonData.subTasks[0]).to.have.keys(\"id\", \"title\", \"status\");",
									"     ",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URLBASE}}/api/v1/tasks/get-by-id/{{IDTASK}}",
							"host": [
								"{{URLBASE}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								"get-by-id",
								"{{IDTASK}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar atualizar tarefa com sucesso\", function(){",
									"    pm.response.to.have.status(204); ",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{$randomJobTitle}}\",\n  \"description\": \"{{$randomJobDescriptor}}\",\n  \"type\": 0,\n  \"finishDate\": \"2023-11-30T00:07:37.343Z\",\n  \"subTasks\": [\n    {\n      \"title\": \"{{$randomJobTitle}}\"\n    }\n  ],\n  \"status\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URLBASE}}/api/v1/tasks/update/{{IDTASK}}",
							"host": [
								"{{URLBASE}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								"update",
								"{{IDTASK}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "remove",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar remover tarefa com sucesso\", function(){",
									"    pm.response.to.have.status(204); ",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URLBASE}}/api/v1/tasks/remove/{{IDTASK}}",
							"host": [
								"{{URLBASE}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								"remove",
								"{{IDTASK}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Note",
			"item": [
				{
					"name": "register-note",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar registrar anota√ß√£o com sucesso\", function(){",
									"    pm.response.to.have.status(200); ",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json; ",
									"",
									"    pm.response.to.have.jsonBody(\"id\");",
									"    pm.response.to.have.jsonBody(\"annotation\");",
									"",
									"    let jsonData = pm.response.json(); ",
									"    pm.environment.set(\"IDNOTE\", jsonData.id); ",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"annotation\": \"{{$randomWords}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URLBASE}}/api/v1/notes/register-note",
							"host": [
								"{{URLBASE}}"
							],
							"path": [
								"api",
								"v1",
								"notes",
								"register-note"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verificar se recuperou todas as anota√ß√µes com sucesso\", function(){",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array'); ",
									"    pm.expect(jsonData[0]).to.have.keys(\"id\", \"annotation\"); ",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URLBASE}}/api/v1/notes/get-all",
							"host": [
								"{{URLBASE}}"
							],
							"path": [
								"api",
								"v1",
								"notes",
								"get-all"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-by-id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verificar recupera nota por id com sucesso\", function(){",
									"    pm.response.to.have.status(200); ",
									"    pm.response.to.be.withBody; ",
									"    pm.response.to.be.json; ",
									"",
									"    pm.response.to.have.jsonBody(\"id\");",
									"    pm.response.to.have.jsonBody(\"annotation\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URLBASE}}/api/v1/notes/get-by-id/{{IDNOTE}}",
							"host": [
								"{{URLBASE}}"
							],
							"path": [
								"api",
								"v1",
								"notes",
								"get-by-id",
								"{{IDNOTE}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "remove",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verificar remove anota√ß√£o com sucesso\", function(){",
									"    pm.response.to.have.status(204);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URLBASE}}/api/v1/notes/remove/{{IDNOTE}}",
							"host": [
								"{{URLBASE}}"
							],
							"path": [
								"api",
								"v1",
								"notes",
								"remove",
								"{{IDNOTE}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URLBASE",
			"value": "http://localhost:5037",
			"type": "string"
		}
	]
}